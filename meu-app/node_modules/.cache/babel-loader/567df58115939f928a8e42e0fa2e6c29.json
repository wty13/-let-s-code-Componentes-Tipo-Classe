{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Cod\\xEDgos\\\\Programas\\\\react\\\\meu-app\\\\src\\\\components\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\"; // class App extends React.Component{\n//   render(){\n//     return(\n//       <> \n//       <p>\n//         Meu primeiro parágrafo\n//       </p>\n//       <p>\n//       Meu segundo parágrafo\n//       </p>\n//       <p>\n//         {new Date().toLocaleDateString('pt-BR')}\n//       </p>\n//       </>\n//     )\n//   }\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [nome, setNome] = useState(undefined);\n  useEffect(() => {\n    if (nome === undefined) {\n      setNome(sessionStorage.getItem('nome') || \"\");\n    } else {\n      sessionStorage.setItem('nome', nome);\n    }\n  }, [nome]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: evt => setNome(evt.target.value),\n      value: nome\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: nome\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"gHEjn4SadCR7SDUFUyiYxGY/k5Q=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/xampp/htdocs/Codígos/Programas/react/meu-app/src/components/App.js"],"names":["React","useState","useEffect","App","nome","setNome","undefined","sessionStorage","getItem","setItem","evt","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,eAAe,SAASC,GAAT,GAAc;AAAA;;AAE3B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAACK,SAAD,CAAhC;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGE,IAAI,KAAKE,SAAZ,EAAsB;AACpBD,MAAAA,OAAO,CAACE,cAAc,CAACC,OAAf,CAAuB,MAAvB,KAAkC,EAAnC,CAAP;AACD,KAFD,MAGI;AACFD,MAAAA,cAAc,CAACE,OAAf,CAAuB,MAAvB,EAA+BL,IAA/B;AACD;AACF,GAPQ,EAON,CAACA,IAAD,CAPM,CAAT;AASA,sBACE;AAAA,4BACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAGM,GAAD,IAASL,OAAO,CAACK,GAAG,CAACC,MAAJ,CAAWC,KAAZ,CAA7C;AAAiE,MAAA,KAAK,EAAER;AAAxE;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAMD;;GAnBuBD,G;;KAAAA,G","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\n\n// class App extends React.Component{\n//   render(){\n//     return(\n//       <> \n//       <p>\n//         Meu primeiro parágrafo\n//       </p>\n//       <p>\n//       Meu segundo parágrafo\n//       </p>\n//       <p>\n//         {new Date().toLocaleDateString('pt-BR')}\n//       </p>\n//       </>\n//     )\n//   }\n// }\n\nexport default function App(){\n\n  const [nome, setNome] = useState(undefined);\n\n  useEffect(() => {\n    if(nome === undefined){\n      setNome(sessionStorage.getItem('nome') || \"\");\n    } \n    else{\n      sessionStorage.setItem('nome', nome);\n    }\n  }, [nome]);\n\n  return (\n    <>\n      <input type='text' onChange={(evt) => setNome(evt.target.value)} value={nome} />\n      <h1>{nome}</h1>\n    </>\n  );\n}"]},"metadata":{},"sourceType":"module"}